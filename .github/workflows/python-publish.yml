name: 🍒 Upload and Release Python Package

on:
  push:
    branches:
      - main
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: ytbtimecodes
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }
      
    steps:
    - name: 🍊 😺 Checkout repository
      uses: actions/checkout@v4

    - name: 🥝 😺 Set up Python environment
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: 🐍 🔄 PyPI Upgrade
      run: python -m pip install --upgrade pip

    - name: 🐍 ⬇️ 🦅 PyPI. VersionHawk Install
      run: pip install versionhawk

    #- name: 🕰️ 🔢 Version DateTimeStamp
    #  run: echo "VERSION=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

    - name: 🦅 🔢 VersionHawk. Get a New version
      run: |
        echo "VERSION=$(versionhawk ${PROJECT_NAME})" >> $GITHUB_ENV

    # Default 0.0.0.0.0.0.0.0.1 - to have 404 PEP
    - name: 🔫 🔢  Sed Version to PROJECT.TOML
      run: |
        sed -i "s/0.0.0.0.0.0.0.0.1/${VERSION}/g" pyproject.toml

    - name: 🐍 ⬇️ Python. Install dependencies
      run: pip install build

    - name: 🐍 🏗️ Python. Build package
      run: python -m build

    - name: 😺 💾 🚀 Github. Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        release_name: ${{ env.VERSION }}
        draft: false
        prerelease: false

    - name: 🐍 💾 🚀 Python PyPI. Publish package
      if: steps.create_release.outputs.upload_url != ''
      uses: pypa/gh-action-pypi-publish@v1.8.6
      with:
        user: __token__
        password: ${{ env.PYPI_API_TOKEN }}




      
